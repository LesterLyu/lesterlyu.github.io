{"version":3,"sources":["components/ParallaxBackground/ParallaxBackground.js","components/ThemeSwitcher/themes.js","components/ThemeSwitcher/ThemeSwitcher.js","components/pages/Intro.js","App.js","serviceWorker.js","index.js"],"names":["ParallaxBackground","props","context","colorPrimary","theme","className","style","color","id","contextTypes","PropTypes","any","themes","name","firstTime","colorAlternate","colorHighlight","textPrimary","navAlpha","getThemes","map","bgPrimary","bgAlternate","bgLanding","textAlternate","textLanding","parallaxStars","ThemeSwitcher","getRandomTheme","currentTheme","state","themesWithoutCurrentTheme","filter","Math","floor","random","length","switchTheme","randomTheme","setState","firstTimeThemes","bind","this","children","jsx","Component","childContextTypes","func","useStyles","makeStyles","itemRoot","textAlign","paddingBottom","fontFamily","lineHeight","title","paddingTop","fontWeight","fontSize","item","itemDescription","hr","borderTop","Item","description","link","classes","Link","href","target","Intro","Container","maxWidth","Typography","variant","gutterBottom","icon","App","Grid","container","justify","IconButton","GitHub","LinkedIn","Email","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9751236.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nconst ParallaxBackground = (props, context) => {\n  const { theme: { colorPrimary } } = context;\n\n  return (\n    <div className=\"parallax\" style={{ color: colorPrimary }}>\n      <div id=\"stars1\" />\n      <div id=\"stars2\" />\n      <div id=\"stars3\" />\n    </div>\n  );\n};\n\nParallaxBackground.contextTypes = {\n  theme: PropTypes.any\n};\n\nexport default ParallaxBackground;\n","const themes = [\n  {\n    name: 'blue',\n    firstTime: true,\n    colorPrimary: '#4ea9da',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#daedf7',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\n  },\n  {\n    name: 'cyan',\n    firstTime: true,\n    colorPrimary: '#3dc0b0',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#d7f2ef',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\n  },\n  {\n    name: 'blue-alt',\n    colorPrimary: '#FAFAFA',\n    colorAlternate: '#4ea9da',\n    colorHighlight: '#2a93cb',\n    textPrimary: '#FAFAFA',\n    navAlpha: 'rgba(78, 169, 218, 0.75)'\n  },\n  {\n    name: 'cyan-alt',\n    colorPrimary: '#FAFAFA',\n    colorAlternate: '#3dc0b0',\n    colorHighlight: '#35a698',\n    textPrimary: '#FAFAFA',\n    navAlpha: 'rgba(61, 192, 176, 0.75)'\n  },\n  {\n    name: 'green',\n    colorPrimary: '#5BA150',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#e1efdf',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\n  },\n  {\n    name: 'brown',\n    colorPrimary: '#A26836',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#f5ebe2',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\n  },\n  {\n    name: 'orange',\n    colorPrimary: '#e17421',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#f9e4d5',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\n  },\n  {\n    name: 'crimson-red',\n    colorPrimary: '#e64f52',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#fbe4e4',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\n  },\n  {\n    name: 'red',\n    colorPrimary: '#af3d4e',\n    colorAlternate: '#FAFAFA',\n    colorHighlight: '#f6e4e7',\n    textPrimary: '#202121',\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\n  },\n  {\n    name: 'red-alt',\n    colorPrimary: '#FFFFFF',\n    colorAlternate: '#89303d',\n    colorHighlight: '#63232c',\n    textPrimary: '#FFFFFF',\n    navAlpha: 'rgba(137, 48, 61, 0.75)'\n  },\n  {\n    name: 'indigo-alt',\n    colorPrimary: '#FAFAFA',\n    colorAlternate: '#303F9F',\n    colorHighlight: '#242f78',\n    textPrimary: '#FAFAFA',\n    navAlpha: 'rgba(48, 63, 159, 0.75)'\n  },\n  {\n    name: 'grey-alt',\n    colorPrimary: '#FFFFFF',\n    colorAlternate: '#485564',\n    colorHighlight: '#333c46',\n    textPrimary: '#FFFFFF',\n    navAlpha: 'rgba(72, 85, 100, 0.75)'\n  },\n  {\n    name: 'material-cyan',\n    colorPrimary: '#00BCD4',\n    colorAlternate: '#FFFFFF',\n    colorHighlight: '#d4faff',\n    textPrimary: '#212121',\n    navAlpha: 'rgba(255, 255, 255, 0.75)'\n  },\n  {\n    name: 'material-brown',\n    colorPrimary: '#845c4e',\n    colorAlternate: '#FFFFFF',\n    colorHighlight: '#eee6e3',\n    textPrimary: '#212121',\n    navAlpha: 'rgba(255, 255, 255, 0.75)'\n  },\n  {\n    name: 'material-grey',\n    firstTime: true,\n    colorPrimary: '#607D8B',\n    colorAlternate: '#FFFFFF',\n    colorHighlight: '#dfe6e9',\n    textPrimary: '#212121',\n    navAlpha: 'rgba(255, 255, 255, 0.75)'\n  },\n  {\n    name: 'material-grey-alt',\n    colorPrimary: '#FFFFFF',\n    colorAlternate: '#455A64',\n    colorHighlight: '#374850',\n    textPrimary: '#FAFAFA',\n    navAlpha: 'rgba(69, 90, 100, 0.75)'\n  }\n];\n\nexport const getThemes = () => {\n  return themes.map((theme) => {\n    return {\n      name: theme.name,\n      firstTime: theme.firstTime,\n      colorPrimary: theme.colorPrimary,\n      colorAlternate: theme.colorAlternate,\n      colorHighlight: theme.colorHighlight,\n      bgPrimary: theme.colorAlternate,\n      bgAlternate: theme.colorPrimary,\n      bgLanding: theme.colorPrimary,\n      textPrimary: theme.textPrimary,\n      textAlternate: theme.colorAlternate,\n      textLanding: theme.colorPrimary,\n      parallaxStars: theme.colorPrimary,\n      navAlpha: theme.navAlpha\n    };\n  });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getThemes } from './themes';\n\nclass ThemeSwitcher extends Component {\n\n  constructor(props) {\n    super(props);\n    const allThemes = getThemes();\n    const firstTimeThemes = allThemes.filter(theme => theme.firstTime === true);\n\n    this.state = {\n      theme: firstTimeThemes[Math.floor((Math.random() * (firstTimeThemes.length)))]\n    }\n\n    this.switchTheme = this.switchTheme.bind(this);\n  }\n  \n  getChildContext() {\n    return {\n      theme: this.state.theme,\n      switchTheme: this.switchTheme\n    };\n  }\n\n  getRandomTheme = () => {\n    const currentTheme = this.state.theme;\n    const allThemes = getThemes();\n    const themesWithoutCurrentTheme = allThemes.filter(\n      theme => theme.name !== currentTheme.name\n    );\n    const randomThemeIndex = Math.floor(\n      (Math.random() * (themesWithoutCurrentTheme.length))\n    );\n    return themesWithoutCurrentTheme[randomThemeIndex];\n  }\n\n  switchTheme = () => {\n    const randomTheme = this.getRandomTheme();\n    this.setState({\n      theme: randomTheme\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n    const theme = this.state.theme;\n\n    return (\n      <div className=\"theme-switcher\">\n        <style jsx=\"true\">\n        {`\n          body {\n            background-color: ${theme.bgPrimary};\n            body, h1, h2, h3, h4, h5, h6, p, ol, ul {\n              color: ${theme.textPrimary}\n            }\n          }\n        `}\n        </style>\n        { children }\n      </div>\n    );\n  }\n}\n\nThemeSwitcher.propTypes = {\n  children: PropTypes.node\n}\n\nThemeSwitcher.childContextTypes = {\n  theme: PropTypes.any,\n  switchTheme: PropTypes.func\n}\n\nexport default ThemeSwitcher;","import {Typography, Link, Container} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n    itemRoot: {\r\n        textAlign: 'left',\r\n        paddingBottom: 20,\r\n        fontFamily: 'Ubuntu',\r\n        lineHeight: 1.5,\r\n    },\r\n    title: {\r\n        paddingTop: 30,\r\n        paddingBottom: 10,\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Ubuntu',\r\n        textAlign: 'initial',\r\n        fontSize: 26,\r\n    },\r\n    item: {\r\n        fontSize: 17,\r\n        fontWeight: 400,\r\n        textAlign: 'initial',\r\n        color: '#000',\r\n        \"&:hover\": {\r\n            color: '#2196f3'\r\n        },\r\n    },\r\n    itemDescription: {\r\n        fontSize: 17,\r\n        fontWeight: 400,\r\n        textAlign: 'initial',\r\n        color: '#7a7a7a',\r\n    },\r\n    hr: {\r\n        borderTop: '1px solid #ddd',\r\n    }\r\n});\r\n\r\nfunction Item(props) {\r\n    const {name, description, link} = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.itemRoot}>\r\n            <Link className={classes.item} href={link} target=\"_blank\">\r\n                {name}\r\n            </Link>\r\n            {' · '}\r\n            <span className={classes.itemDescription}>\r\n                {description}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Intro() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container style={{maxWidth: 800}}>\r\n            <hr className={classes.hr}/>\r\n            <Typography className={classes.title} variant=\"h5\" gutterBottom>\r\n                Public Projects\r\n            </Typography>\r\n            <Item name=\"MOHLTC Data Project\"\r\n                  description=\"A web app designed for businesses to create data collection forms on the fly and collect\r\n                   data in a short period of time.\"\r\n                  link=\"https://github.com/LesterLyu/MOHLTC-DataProject\"/>\r\n            <Item name=\"Xlsx Populate\"\r\n                  description=\"A JavaScript library that creates or modifies MS Excel files. It supports real-time\r\n                  formula evaluating and is able to run in the browser.\"\r\n                  link=\"https://github.com/LesterLyu/xlsx-populate\"/>\r\n            <Item name=\"Excel Formula Parser\"\r\n                  description=\"A JavaScript library to parse and evaluate MS Excel/Google Sheets formulas with near 300\r\n                   formulas support and competitive performance.\"\r\n                  link=\"https://github.com/LesterLyu/fast-formula-parser\"/>\r\n            <Item name=\"Connect Four AI\"\r\n                  description=\"An  implementation of Minimax Algorithm on Connect Four with GUI.\"\r\n                  link=\"https://github.com/LesterLyu/CSC384Project\"/>\r\n            <Item name=\"UofT Timetable\"\r\n                  description=\"A timetable Android app for students in University of Toronto.\"\r\n                  link=\"https://github.com/LesterLyu/UofT-Timetable\"/>\r\n            <Item name=\"Acorn API\"\r\n                  description=\"An Acorn API for University of Toronto. Acorn is UofT' s student information service.\r\n                   It has no public API. I wrote this to support the UofT Timetable above.\"\r\n                  link=\"https://github.com/LesterLyu/AcornAPI\"/>\r\n            <Item name=\"Object Detection Webapp (requires camera)\"\r\n                  description=\"A react wrapper for object detection. Pre-trained Model is from Tenserflow.js \"\r\n                  link=\"https://lesterlyu.com/\"/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Intro;\r\n","import React from 'react';\nimport './App.css';\nimport ParallaxBackground from './components/ParallaxBackground';\nimport ThemeSwitcher from './components/ThemeSwitcher';\nimport {Typography, IconButton, Grid} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {GitHub, LinkedIn, Email} from '@material-ui/icons';\nimport Intro from './components/pages/Intro';\n\nconst useStyles = makeStyles({\n    name: {\n        paddingTop: 60,\n        fontWeight: 'bold',\n        fontFamily: 'Ubuntu'\n    },\n    icon: {\n        fontSize: 30,\n        color: '#555'\n    }\n});\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <div className=\"App\">\n            <ThemeSwitcher>\n                <ParallaxBackground/>\n                <Typography className={classes.name} variant=\"h3\" gutterBottom>\n                    Dishu Lyu\n                </Typography>\n                <Grid container justify=\"center\">\n                    <Grid item>\n                        <IconButton href=\"https://github.com/LesterLyu\" target=\"_blank\">\n                            <GitHub className={classes.icon}/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item>\n                        <IconButton href=\"https://www.linkedin.com/in/lesterlyu/\" target=\"_blank\">\n                            <LinkedIn className={classes.icon}/>\n                        </IconButton>\n                    </Grid>\n                    <Grid item>\n                        <IconButton href=\"mailto:lvds2000@gmail.com\" target=\"_blank\">\n                            <Email className={classes.icon}/>\n                        </IconButton>\n                    </Grid>\n                </Grid>\n                <Intro/>\n\n            </ThemeSwitcher>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-ubuntu';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}