{"version":3,"sources":["components/ParallaxBackground/ParallaxBackground.js","components/ThemeSwitcher/themes.js","components/ThemeSwitcher/ThemeSwitcher.js","components/Intro.js","pages/Intro.js","components/AppBar.js","pages/demo/formulaParser/fastFormulaParser.js","pages/demo/objectDetection/index.js","pages/dashboard/PhoneYears.js","pages/dashboard/WorkPermit.js","pages/dashboard/index.js","App.js","serviceWorker.js","index.js"],"names":["ParallaxBackground","props","context","colorPrimary","theme","className","style","color","id","contextTypes","PropTypes","any","themes","name","firstTime","colorAlternate","colorHighlight","textPrimary","navAlpha","getThemes","map","bgPrimary","bgAlternate","bgLanding","textAlternate","textLanding","parallaxStars","ThemeSwitcher","getRandomTheme","currentTheme","state","themesWithoutCurrentTheme","filter","Math","floor","random","length","switchTheme","randomTheme","setState","firstTimeThemes","bind","this","children","jsx","Component","childContextTypes","func","useStyles","makeStyles","itemRoot","textAlign","paddingBottom","fontFamily","lineHeight","title","paddingTop","fontWeight","fontSize","demo","noDemo","textDecoration","item","itemDescription","hr","borderTop","itemInterest","itemCompany","resume","display","Resume","classes","Link","href","target","OpenInNew","Title","Typography","variant","gutterBottom","Item","description","link","playStore","to","Star","Interest","Experience","company","duration","Education","paddingLeft","Footer","Intro","maxWidth","root","flexGrow","backButton","MyAppBar","AppBar","position","Toolbar","IconButton","ArrowBack","padding","marginTop","cellDefault","borderRight","borderBottom","whiteSpace","boxSizing","input","paddingRight","data","cnt","i","row","j","push","emptyData","Cell","columnIndex","rowIndex","number","dividend","modulo","String","fromCharCode","charCodeAt","columnNumberToName","FastFormulaParser","useState","formula","setFormula","result","setResult","parser","FormulaParser","onVariable","sheetName","sheet","col","from","onCell","onRange","ref","arr","innerArr","useEffect","FormulaResult","parse","e","toString","Container","Paper","height","width","columnCount","columnWidth","rowCount","rowHeight","TextField","disabled","label","value","fullWidth","onChange","multiline","supportedFunctions","join","App","videoRef","React","createRef","canvasRef","info","fps","stop","front","time","Date","now","frames","detectFrame","video","model","detect","then","predictions","renderPredictions","requestAnimationFrame","ctx","current","getContext","clearRect","canvas","font","textBaseline","globalAlpha","forEach","prediction","x","bbox","y","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","class","textHeight","parseInt","fillRect","fillText","score","toPrecision","switchCamera","window","stream","getTracks","t","console","log","start","innerHeight","innerWidth","idealHeight","idealWidth","canvasWidth","canvasHeight","cocoSsd","catch","error","message","scale","devicePixelRatio","navigator","mediaDevices","getUserMedia","audio","facingMode","ideal","srcObject","Promise","resolve","reject","onloadedmetadata","autoPlay","playsInline","muted","top","left","onClick","Fab","backgroundColor","Button","boldText","container","card","margin","minHeight","Dashboard","appliedDate","a","fetch","res","json","CircularProgress","requiredDays","Number","work_extension_new_employer","online","EstimateDate","setDate","getDate","Grid","xs","InfoOutlined","Timelapse","lastupdated","Timeline","type","Check","toLocaleDateString","useWorkPermitCards","workPermitTimeCard","EstimatedTimeCard","phoneYearsCard","phoneBoughtTime","years","getTime","PhoneAndroid","toFixed","usePhoneYears","Fragment","CssBaseline","spacing","sm","md","elevation","createMuiTheme","palette","primary","main","secondary","icon","Home","justify","GitHub","LinkedIn","Email","ThemeProvider","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"ggBAKMA,G,OAAqB,SAACC,EAAOC,GAAa,IAC7BC,EAAmBD,EAA5BE,MAASD,aAEjB,OACE,yBAAKE,UAAU,WAAWC,MAAO,CAAEC,MAAOJ,IACxC,yBAAKK,GAAG,WACR,yBAAKA,GAAG,WACR,yBAAKA,GAAG,cAKdR,EAAmBS,aAAe,CAChCL,MAAOM,IAAUC,KAGJX,Q,6CCrBTY,EAAS,CACb,CACEC,KAAM,OACNC,WAAW,EACXX,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,6BAEZ,CACEL,KAAM,OACNC,WAAW,EACXX,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,6BAEZ,CACEL,KAAM,WACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,4BAEZ,CACEL,KAAM,WACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,4BAEZ,CACEL,KAAM,QACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,6BAEZ,CACEL,KAAM,QACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,6BAEZ,CACEL,KAAM,SACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,6BAEZ,CACEL,KAAM,cACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,6BAEZ,CACEL,KAAM,MACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,6BAEZ,CACEL,KAAM,UACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,2BAEZ,CACEL,KAAM,aACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,2BAEZ,CACEL,KAAM,WACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,2BAEZ,CACEL,KAAM,gBACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,6BAEZ,CACEL,KAAM,iBACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,6BAEZ,CACEL,KAAM,gBACNC,WAAW,EACXX,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,6BAEZ,CACEL,KAAM,oBACNV,aAAc,UACdY,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,SAAU,4BAIDC,EAAY,WACvB,OAAOP,EAAOQ,KAAI,SAAChB,GACjB,MAAO,CACLS,KAAMT,EAAMS,KACZC,UAAWV,EAAMU,UACjBX,aAAcC,EAAMD,aACpBY,eAAgBX,EAAMW,eACtBC,eAAgBZ,EAAMY,eACtBK,UAAWjB,EAAMW,eACjBO,YAAalB,EAAMD,aACnBoB,UAAWnB,EAAMD,aACjBc,YAAab,EAAMa,YACnBO,cAAepB,EAAMW,eACrBU,YAAarB,EAAMD,aACnBuB,cAAetB,EAAMD,aACrBe,SAAUd,EAAMc,cChJhBS,E,kDAEJ,WAAY1B,GAAQ,IAAD,uBACjB,cAAMA,IAkBR2B,eAAiB,WACf,IAAMC,EAAe,EAAKC,MAAM1B,MAE1B2B,EADYZ,IAC0Ba,QAC1C,SAAA5B,GAAK,OAAIA,EAAMS,OAASgB,EAAahB,QAKvC,OAAOkB,EAHkBE,KAAKC,MAC3BD,KAAKE,SAAYJ,EAA0BK,UA1B7B,EA+BnBC,YAAc,WACZ,IAAMC,EAAc,EAAKV,iBACzB,EAAKW,SAAS,CACZnC,MAAOkC,KAhCT,IACME,EADYrB,IACgBa,QAAO,SAAA5B,GAAK,OAAwB,IAApBA,EAAMU,aAHvC,OAKjB,EAAKgB,MAAQ,CACX1B,MAAOoC,EAAgBP,KAAKC,MAAOD,KAAKE,SAAYK,EAAgBJ,UAGtE,EAAKC,YAAc,EAAKA,YAAYI,KAAjB,gBATF,E,8DAajB,MAAO,CACLrC,MAAOsC,KAAKZ,MAAM1B,MAClBiC,YAAaK,KAAKL,e,+BAuBZ,IACAM,EAAaD,KAAKzC,MAAlB0C,SACFvC,EAAQsC,KAAKZ,MAAM1B,MAEzB,OACE,yBAAKC,UAAU,kBACb,2BAAOuC,IAAI,QAAX,4DAGwBxC,EAAMiB,UAH9B,0FAKejB,EAAMa,YALrB,2CAUE0B,O,GAxDkBE,aAkE5BlB,EAAcmB,kBAAoB,CAChC1C,MAAOM,IAAUC,IACjB0B,YAAa3B,IAAUqC,MAGVpB,Q,4ICtETqB,EAAYC,YAAW,CACzBC,SAAU,CACNC,UAAW,OACXC,cAAe,GACfC,WAAY,SACZC,WAAY,KAEhBC,MAAO,CACHC,WAAY,GACZJ,cAAe,GACfK,WAAY,OACZJ,WAAY,SACZF,UAAW,UACXO,SAAU,IAEdC,KAAM,CACFD,SAAU,GACVD,WAAY,IACZN,UAAW,UACX5C,MAAO,UACP,UAAW,CACPA,MAAO,YAGfqD,OAAQ,CACJF,SAAU,GACVD,WAAY,IACZN,UAAW,UACX5C,MAAO,UACPsD,eAAgB,gBAEpBC,KAAM,CACFJ,SAAU,GACVD,WAAY,IACZN,UAAW,UACX5C,MAAO,OACP,UAAW,CACPA,MAAO,YAGfwD,gBAAiB,CACbL,SAAU,GACVD,WAAY,IACZN,UAAW,UACX5C,MAAO,WAEXyD,GAAI,CACAC,UAAW,kBAEfC,aAAc,CACVR,SAAU,GACVD,WAAY,IACZN,UAAW,UACX5C,MAAO,QAEX4D,YAAa,CACTT,SAAU,GACVD,WAAY,IACZN,UAAW,UACX5C,MAAO,UACP,UAAW,CACPA,MAAO,YAGf6D,OAAQ,CACJZ,WAAY,GACZa,QAAS,QACTZ,WAAY,OACZJ,WAAY,SACZF,UAAW,UACXO,SAAU,GACVnD,MAAO,OACP,UAAW,CACTA,MAAO,cAKV,SAAS+D,IACZ,IAAMC,EAAUvB,IAChB,OACI,kBAACwB,EAAA,EAAD,CAAMnE,UAAWkE,EAAQH,OAAQK,KAAM,cAAeC,OAAO,UAA7D,SAEI,kBAACC,EAAA,EAAD,CAAWjB,SAAS,aAKzB,SAASkB,EAAM3E,GAClB,IAAMsE,EAAUvB,IAChB,OACI,kBAAC6B,EAAA,EAAD,CAAYxE,UAAWkE,EAAQhB,MAAOuB,QAAQ,KAAKC,cAAY,GAC1D9E,EAAMY,MAKZ,SAASmE,EAAK/E,GAAQ,IAClBY,EAAoDZ,EAApDY,KAAMoE,EAA8ChF,EAA9CgF,YAAaC,EAAiCjF,EAAjCiF,KAAMvB,EAA2B1D,EAA3B0D,KAAMwB,EAAqBlF,EAArBkF,UAAWvB,EAAU3D,EAAV2D,OAC3CW,EAAUvB,IAChB,OACI,yBAAK3C,UAAWkE,EAAQrB,UACpB,kBAACsB,EAAA,EAAD,CAAMnE,UAAWkE,EAAQT,KAAMW,KAAMS,EAAMR,OAAO,UAC7C7D,EACD,kBAAC8D,EAAA,EAAD,CAAWjB,SAAS,aAEvBC,EACG,8BACK,SACD,kBAAC,IAAD,CAAYtD,UAAWkE,EAAQZ,KAAMyB,GAAIzB,GAAzC,OAEI,kBAAC0B,EAAA,EAAD,CAAM3B,SAAS,cAGrB,KAGLE,EACG,8BACS,SACL,0BAAMvD,UAAWkE,EAAQX,QAAzB,OAEI,kBAACyB,EAAA,EAAD,CAAM3B,SAAS,cAGrB,KAELyB,EACG,8BACK,SACD,kBAACX,EAAA,EAAD,CAAMnE,UAAWkE,EAAQZ,KAAMc,KAAMU,EAAWT,OAAO,UAAvD,aAEI,kBAACC,EAAA,EAAD,CAAWjB,SAAS,cAG1B,KAGL,SACD,0BAAMrD,UAAWkE,EAAQR,iBACpBkB,IAMV,SAASK,EAAT,GAA2B,IAARzE,EAAO,EAAPA,KAChB0D,EAAUvB,IAChB,OACI,yBAAK3C,UAAWkE,EAAQrB,UACpB,0BAAM7C,UAAWkE,EAAQL,cACpBrD,IAMV,SAAS0E,EAAT,GAAuD,IAAlChC,EAAiC,EAAjCA,MAAOiC,EAA0B,EAA1BA,QAASN,EAAiB,EAAjBA,KAAMO,EAAW,EAAXA,SACxClB,EAAUvB,IAChB,OACI,yBAAK3C,UAAWkE,EAAQrB,UACpB,0BAAM7C,UAAWkE,EAAQL,cACpBX,GAEJ,SACD,0BAAMlD,UAAWkE,EAAQR,iBACpB0B,GAEL,6BACCP,EAAO,kBAACV,EAAA,EAAD,CAAMnE,UAAWkE,EAAQJ,YAAaM,KAAMS,EAAMR,OAAO,UACxDc,GAEL,0BAAMnF,UAAWkE,EAAQR,iBACpByB,IAOd,SAASE,IACZ,IAAMnB,EAAUvB,IAChB,OACI,yBAAK3C,UAAWkE,EAAQrB,UACpB,yBAAK5C,MAAO,CAAC8C,cAAe,KACxB,0BAAM/C,UAAWkE,EAAQL,cAAzB,4EAIJ,yBAAK7D,UAAWkE,EAAQL,aAAc5D,MAAO,CAAC8C,cAAe,GAAIuC,YAAa,KAA9E,0FAGA,yBAAKtF,UAAWkE,EAAQL,aAAc5D,MAAO,CAACqF,YAAa,KAA3D,uBAOL,SAASC,IACZ,OAAO,0BAAMtF,MAAO,CAACC,MAAO,OAAQ6C,cAAe,KAA5C,8CC9GIyC,MA5Ff,WACI,OACI,kBAAC,YAAD,CAAWvF,MAAO,CAACwF,SAAU,MACzB,kBAAC,UAAD,MAEA,kBAACxB,EAAD,MACA,kBAACM,EAAD,CAAO/D,KAAK,iCACZ,kBAACmE,EAAD,CAAMnE,KAAK,YACLoE,YAAY,mWAIZC,KAAK,2CAEX,kBAACF,EAAD,CAAMnE,KAAK,gBACLoE,YAAY,oUAIZC,KAAK,8CACX,kBAACF,EAAD,CAAMnE,KAAK,uBACLoE,YAAY,2IAEZtB,KAAK,4BACLuB,KAAK,sDACX,kBAACF,EAAD,CAAMnE,KAAK,sBACLoE,YAAY,6HAEZrB,QAAQ,EACRsB,KAAK,oDACX,kBAACF,EAAD,CAAMnE,KAAK,gBACLoE,YAAY,8IAEZC,KAAK,+CACX,kBAACF,EAAD,CAAMnE,KAAK,kBACLoE,YAAY,oEACZC,KAAK,+CACX,kBAACF,EAAD,CAAMnE,KAAK,iBACLoE,YAAY,iEACZE,UAAU,4EACVD,KAAK,gDACX,kBAACF,EAAD,CAAMnE,KAAK,YACLoE,YAAY,kKAEZC,KAAK,0CACX,kBAACF,EAAD,CAAMnE,KAAK,4CACLoE,YAAY,iFACZtB,KAAK,yBACLuB,KAAK,sDAEX,kBAAC,UAAD,MAEA,kBAACN,EAAD,CAAO/D,KAAK,cAEZ,kBAACyE,EAAD,CAAUzE,KAAM,+BAChB,kBAACyE,EAAD,CAAUzE,KAAM,8CAChB,kBAACyE,EAAD,CAAUzE,KAAM,wCAEhB,kBAAC,UAAD,MAEA,kBAAC+D,EAAD,CAAO/D,KAAK,gBACZ,kBAAC0E,EAAD,CAAYhC,MAAM,oBACNiC,QAAQ,2CACRN,KAAK,+BACLO,SAAS,4BACrB,kBAACF,EAAD,CAAYhC,MAAM,uBACNiC,QAAQ,0CACRN,KAAK,0CACLO,SAAS,+BACrB,kBAACF,EAAD,CAAYhC,MAAM,sBACNiC,QAAQ,2CACRN,KAAK,2BACLO,SAAS,mCACrB,kBAACF,EAAD,CAAYhC,MAAM,4BACNiC,QAAQ,2DACRN,KAAK,kCACLO,SAAS,sCACrB,kBAACF,EAAD,CAAYhC,MAAM,2BACNiC,QAAQ,gDACRN,KAAK,gCACLO,SAAS,iCAErB,kBAAC,UAAD,MAEA,kBAACb,EAAD,CAAO/D,KAAK,cACZ,kBAAC6E,EAAD,MACA,kBAAC,UAAD,MACA,kBAACE,EAAD,Q,8DCrFN5C,EAAYC,aAAW,SAAA7C,GAAK,MAAK,CACnC2F,KAAM,CACFC,SAAU,GAEdC,WAAY,CACR1F,MAAO,OACPsD,eAAgB,WAEpBN,MAAO,CACHyC,SAAU,EACVzF,MAAO,OACPsD,eAAgB,eAIT,SAASqC,EAAT,GAA4B,IAAT3C,EAAQ,EAARA,MACxBgB,EAAUvB,IAEhB,OACI,kBAACmD,EAAA,EAAD,CAAQC,SAAS,SAAS/F,UAAWkE,EAAQwB,MACzC,kBAACM,EAAA,EAAD,KACI,kBAAC,IAAD,CAAYjB,GAAG,IAAI/E,UAAWkE,EAAQ0B,YAClC,kBAACK,EAAA,EAAD,CAAY/F,MAAO,WACf,kBAACgG,EAAA,EAAD,CAAW7C,SAAS,cAI5B,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,UAAWkE,EAAQhB,OACvCA,K,mCC3BfP,GAAYC,aAAW,SAAA7C,GAAK,MAAK,CACnC2F,KAAM,CACFS,QAAS,GACTC,UAAW,IAEflD,MAAO,CACHH,cAAe,GACfI,WAAY,IAEhBkD,YAAa,CACTC,YAAa,iBACbC,aAAc,iBACdJ,QAAS,cACTlD,WAAY,SACZH,UAAW,OACX0D,WAAY,MACZC,UAAW,cAEfC,MAAO,CACH3D,cAAe,GACf4D,aAAc,QA0CtB,IAgBMC,GAhBY,WAGd,IAFA,IAAMA,EAAO,GACTC,EAAM,EACDC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAIE,KAAKJ,KAEbD,EAAKK,KAAKF,GAKd,OAHAH,EAAK,GAAG,GAAK,QACbA,EAAK,GAAG,GAAK,QACbA,EAAK,GAAG,IAAK,EACNA,EAGEM,GAEPC,GAAO,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,SAAUpH,EAAW,EAAXA,MAC5BiE,EAAUvB,KAChB,OAAoB,IAAhByE,EACO,yBAAKnH,MAAOA,EAAOD,UAAWkE,EAAQmC,aAC3B,IAAbgB,EAAiB,KAAOA,GAET,IAAbA,EACA,yBAAKpH,MAAOA,EAAOD,UAAWkE,EAAQmC,aAvCrD,SAA4BiB,GAKxB,IAJA,IAAIC,EAAWD,EACX9G,EAAO,GACPgH,EAAS,EAEND,EAAW,GACdC,GAAUD,EAAW,GAAK,GAC1B/G,EAAOiH,OAAOC,aAAa,IAAIC,WAAW,GAAKH,GAAUhH,EACzD+G,EAAW3F,KAAKC,OAAO0F,EAAWC,GAAU,IAGhD,OAAOhH,EA6BEoH,CAAmBR,IAIxB,yBAAKnH,MAAOA,EAAOD,UAAWkE,EAAQmC,cACO,IAAxCO,GAAKS,EAAW,GAAGD,EAAc,GAAc,OAASR,GAAKS,EAAW,GAAGD,EAAc,KAKvF,SAASS,KACpB,IAAM3D,EAAUvB,KADwB,EAEVmF,mBAAS,iCAFC,mBAEjCC,EAFiC,KAExBC,EAFwB,OAGZF,mBAAS,IAHG,mBAGjCG,EAHiC,KAGzBC,EAHyB,KAKlCC,EAAS,IAAIC,KAAc,CAE7BC,WAAY,SAAC7H,EAAM8H,GACf,MAAa,cAAT9H,EACO,CACH+H,MAAO,UACPxB,IAAK,EACLyB,IAAK,GAEK,cAAThI,EACE,CACH+H,MAAO,UACPE,KAAM,CACF1B,IAAK,EACLyB,IAAK,GAETzD,GAAI,CACAgC,IAAK,EACLyB,IAAK,SATZ,GAcTE,OAAQ,YAAuB,EAArBH,MAAsB,IAAfxB,EAAc,EAAdA,IAAKyB,EAAS,EAATA,IAGlB,OAAO5B,GAAKG,EAAM,GAAGyB,EAAM,IAI/BG,QAAS,SAACC,GAKN,IADA,IAAMC,EAAM,GACH9B,EAAM6B,EAAIH,KAAK1B,IAAKA,GAAO6B,EAAI7D,GAAGgC,IAAKA,IAAO,CACnD,IAAM+B,EAAW,GACjB,GAAIlC,GAAKG,EAAM,GACX,IAAK,IAAIyB,EAAMI,EAAIH,KAAKD,IAAKA,GAAOI,EAAI7D,GAAGyD,IAAKA,IAC5CM,EAAS7B,KAAKL,GAAKG,EAAM,GAAGyB,EAAM,IAG1CK,EAAI5B,KAAK6B,GAEb,OAAOD,KAIfE,qBAAU,WACN,IACI,IAAMC,EAAgBb,EAAOc,MAAMlB,EAAS,CAACQ,MAAO,UAAWxB,IAAK,GAAIyB,IAAK,KAC7EN,EAAUc,GACZ,MAAOE,GACLhB,EAAUgB,EAAEC,eAEjB,CAACpB,EAASG,EAAWC,IAOxB,OACI,6BACI,kBAAC,EAAD,CAAQjF,MAAM,wBACd,kBAACkG,EAAA,EAAD,CAAW3D,SAAS,MAChB,kBAAC4D,EAAA,EAAD,CAAOrJ,UAAWkE,EAAQwB,MACtB,kBAAClB,EAAA,EAAD,CAAYC,QAAQ,KAAKxE,MAAO,CAACkD,WAAY,GAAInD,UAAWkE,EAAQhB,OAApE,kBAGA,kBAAC,KAAD,CACIlD,UAAU,OACVsJ,OAAQ,IACRC,MAAO,IACPC,YAAa,GACbC,YAAa,IACbC,SAAU,GACVC,UAAW,IAEVxC,IAGL,kBAAC3C,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,UAAWkE,EAAQhB,OAA5C,aAGA,kBAAC0G,EAAA,EAAD,CAAWC,UAAQ,EAACC,MAAM,YAAYC,MAAM,iBAAiB/J,UAAWkE,EAAQwC,QAChF,kBAACkD,EAAA,EAAD,CAAWC,UAAQ,EAACC,MAAM,YAAYC,MAAM,sBAAsB/J,UAAWkE,EAAQwC,QAErF,kBAAClC,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,UAAWkE,EAAQhB,OAA5C,sBAGA,kBAAC0G,EAAA,EAAD,CAAWC,UAAQ,EAACC,MAAM,MAAMC,MAAM,KAAK/J,UAAWkE,EAAQwC,QAC9D,kBAACkD,EAAA,EAAD,CAAWC,UAAQ,EAACC,MAAM,SAASC,MAAM,KAAK/J,UAAWkE,EAAQwC,QACjE,kBAACkD,EAAA,EAAD,CAAWC,UAAQ,EAACC,MAAM,QAAQC,MAAM,UAAU/J,UAAWkE,EAAQwC,QACrE,kBAAClC,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,UAAWkE,EAAQhB,OAA5C,iBAGA,kBAAC0G,EAAA,EAAD,CAAWI,WAAS,EAACF,MAAM,UAAUC,MAAOhC,EAASkC,SAxC7C,SAAAf,GACpB,IAAMnB,EAAUmB,EAAE7E,OAAO0F,MACzB/B,EAAWD,IAuCY/H,UAAWkE,EAAQwC,QAC9B,kBAACkD,EAAA,EAAD,CAAWM,WAAS,EAACJ,MAAM,SAASE,WAAS,EAACD,MAAO9B,EAAQhI,MAAO,CAACuG,WAAY,OACtExG,UAAWkE,EAAQwC,QAE9B,kBAAClC,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,UAAWkE,EAAQhB,OAA5C,sBAGA,kBAACsB,EAAA,EAAD,CAAYC,QAAQ,SACf0D,EAAOgC,qBAAqBC,KAAK,U,2CCJ3CC,G,kDAjMX,WAAYzK,GAAQ,IAAD,8BACf,cAAMA,IAZV0K,SAAWC,IAAMC,YAWE,EAVnBC,UAAYF,IAAMC,YAUC,EATnB/I,MAAQ,CACJiJ,KAAM,kGACNC,IAAK,GAOU,EALnBC,MAAO,EAKY,EAJnBC,OAAQ,EAIW,EAHnBC,KAAOC,KAAKC,MAGO,EAFnBC,OAAS,EAEU,EA+DnBC,YAAc,SAACC,GACP,EAAKP,OAELG,KAAKC,MAAQ,EAAKF,MAAQ,MAC1B,EAAK5I,SAAS,CAACyI,IAAK,EAAKM,SACzB,EAAKA,OAAS,EACd,EAAKH,KAAOC,KAAKC,OAErB,EAAKC,SACL,EAAKG,MAAMC,OAAOF,GAAOG,MAAK,SAAAC,GAC1B,EAAKC,kBAAkBD,GACvBE,uBAAsB,WAClB,EAAKP,YAAYC,WA3EV,EAgFnBK,kBAAoB,SAAAD,GAChB,IAAMG,EAAM,EAAKjB,UAAUkB,QAAQC,WAAW,MAC9CF,EAAIG,UAAU,EAAG,EAAGH,EAAII,OAAOvC,MAAOmC,EAAII,OAAOxC,QAEjD,IAAMyC,EAAO,kBAEbL,EAAIK,KAAOA,EACXL,EAAIM,aAAe,MACnBN,EAAIO,YAAc,GAClBV,EAAYW,SAAQ,SAAAC,GAChB,IAAMC,EAAID,EAAWE,KAAK,GACpBC,EAAIH,EAAWE,KAAK,GACpB9C,EAAQ4C,EAAWE,KAAK,GACxB/C,EAAS6C,EAAWE,KAAK,GAE/BX,EAAIa,YAAc,UAClBb,EAAIc,UAAY,EAChBd,EAAIe,WAAWL,EAAGE,EAAG/C,EAAOD,GAE5BoC,EAAIgB,UAAY,UAChB,IAAMC,EAAYjB,EAAIkB,YAAYT,EAAWU,MAAQ,QAAQtD,MACvDuD,EAAaC,SAAShB,EAAM,IAClCL,EAAIsB,SAASZ,EAAI,EAAGE,EAAI,EAAGK,EAAY,EAAGG,EAAa,MAG3DvB,EAAYW,SAAQ,SAAAC,GAChB,IAAMC,EAAID,EAAWE,KAAK,GACpBC,EAAIH,EAAWE,KAAK,GAE1BX,EAAIgB,UAAY,UAChBhB,EAAIuB,SAASd,EAAWU,MAAQ,KAA0B,IAAnBV,EAAWe,OAAaC,YAAY,GAAK,IAAKf,EAAI,EAAGE,EAAI,OA9GrF,EAkHnBc,aAAe,WACX,EAAKxC,MAAO,EACRyC,OAAOC,QACPD,OAAOC,OAAOC,YAAYrB,SAAQ,SAAAsB,GAC9BA,EAAE5C,UAGV,EAAKC,OAAS,EAAKA,MACnB4C,QAAQC,IAAI,EAAK7C,OACjB,EAAK8C,QAAQrC,MAAK,WACd,EAAKV,MAAO,EACZ,EAAK1I,SAAS,CAACwI,KAAM,KACrB,EAAKQ,YAAY,EAAKZ,SAASqB,aA3H/B0B,OAAOO,YAAcP,OAAOQ,YAE5B,EAAKC,YAAc,IACnB,EAAKC,WAAa,KAClB,EAAKC,YAAcX,OAAOQ,WAC1B,EAAKI,aAAeZ,OAAOQ,WAAa,EAAI,IAE5C,EAAKC,YAAc,IACnB,EAAKC,WAAa,KAClB,EAAKC,YAAcX,OAAOO,YAAc,EAAI,GAC5C,EAAKK,aAAeZ,OAAOO,aAbhB,E,gEAiBE,IAAD,OAChBvL,KAAKsL,QACArC,MAAK,WACF,OAAO4C,UAEV5C,MAAK,SAAAF,GACF,EAAKA,MAAQA,EACb,EAAKR,MAAO,EACZ,EAAK1I,SAAS,CAACwI,KAAM,KACrB,EAAKQ,YAAY,EAAKZ,SAASqB,YAElCwC,OAAM,SAAAC,GACH,EAAKlM,SAAS,CAACwI,KAAM0D,EAAMC,UAC3BZ,QAAQC,IAAIU,MAER/L,KAAKoI,UAAUkB,QAAQC,WAAW,MAC1C0C,MAAMjB,OAAOkB,iBAAkBlB,OAAOkB,oB,8BAGrC,IAAD,OACJ,OAAIC,UAAUC,cAAgBD,UAAUC,aAAaC,aAC1CF,UAAUC,aACZC,aAAa,CACVC,OAAO,EACPxD,MAAO,CACHyD,WAAYvM,KAAKwI,MAAQ,OAAS,cAClCtB,MAAO,CAACsF,MAAOxM,KAAK0L,YACpBzE,OAAQ,CAACuF,MAAOxM,KAAKyL,gBAG5BxC,MAAK,SAAAgC,GAKF,OAJAG,QAAQC,IAAIJ,GACZ,EAAKpL,SAAS,CAACwI,KAAM,+CACrB2C,OAAOC,OAASA,EAChB,EAAKhD,SAASqB,QAAQmD,UAAYxB,EAC3B,IAAIyB,SAAQ,SAACC,EAASC,GACzB,EAAK3E,SAASqB,QAAQuD,iBAAmB,WACrCF,WAKTD,QAAQE,OAAO,4B,+BAuEpB,IAAD,OACL,OACI,6BACI,2BACIjP,UAAU,OACVmP,UAAQ,EACRC,aAAW,EACXC,OAAK,EACLzG,IAAKvG,KAAKiI,SACVf,MAAOlH,KAAK2L,YACZ1E,OAAQjH,KAAK4L,eAEjB,4BACIjO,UAAU,OACV4I,IAAKvG,KAAKoI,UACVlB,MAAO8D,OAAOkB,iBAAmBlM,KAAK2L,YACtC1E,OAAQ+D,OAAOkB,iBAAmBlM,KAAK4L,aACvChO,MAAO,CACHsJ,MAAOlH,KAAK2L,YACZ1E,OAAQjH,KAAK4L,gBAGD,IAAnB5L,KAAKZ,MAAMkJ,IACR,wBAAI1K,MAAO,CAAC8F,SAAU,WAAYuJ,IAAK,EAAGC,KAAM,EAAGrP,MAAO,SAAUmC,KAAKZ,MAAMkJ,KAC7E,GACN,wBAAI1K,MAAO,CACP8F,SAAU,WACVuJ,IAAK,EACLC,KAAM,EACNvL,QAAS3B,KAAKZ,MAAMiJ,KAAK3I,OAAS,OAAS,SAC3CM,KAAKZ,MAAMiJ,MAEf,kBAAC,IAAD,CAAY3F,GAAG,IAAI9E,MAAO,CACtB8F,SAAU,WACVuJ,IAAKjC,OAAOO,YAAc,GAC1B2B,KAAM,GACNjG,OAAQ,GACRC,MAAO,IACRiG,QAAS,WACvB,EAAK5E,MAAO,EACRyC,OAAOC,QACVD,OAAOC,OAAOC,YAAYrB,SAAQ,SAAAsB,GACjCA,EAAE5C,YAIW,kBAAC6E,GAAA,EAAD,CAAKvP,MAAO,UAAWD,MAAO,CAC1BC,MAAO,OACPwP,gBAAiB,YAEjB,kBAACxJ,EAAA,EAAD,CAAW7C,SAAS,cAI5B,kBAACsM,GAAA,EAAD,CAAQlL,QAAQ,YACRxE,MAAO,CAAC8F,SAAU,WAAYuJ,IAAKjC,OAAOO,YAAc,GAAItE,OAAQ,GAAIiG,KAAM,KAC9ErP,MAAM,UAAUsP,QAASnN,KAAK+K,cAFtC,sB,GApME7C,IAAM/H,W,oBCHlBG,GAAYC,YAAW,CAC3BgN,SAAU,CACRvM,SAAU,GACVD,WAAY,O,+FCHVT,GAAYC,YAAW,CAC3BgN,SAAU,CACRvM,SAAU,GACVD,WAAY,OCIhB,IAAMT,GAAYC,YAAW,CAC3BiN,UAAW,CACT1M,WAAY,IAEdyM,SAAU,CACRvM,SAAU,GACVD,WAAY,KAEd0M,KAAM,CACJC,OAAQ,EACR5J,QAAS,GACT6J,UAAW,OAIA,SAASC,KACtB,IAAM/L,EAAUvB,KADkB,EDfrB,WACb,IAAMuB,EAAUvB,KAD2B,EAGjBmF,mBAAS,CACjClB,KAAM,KACNsJ,YAAa,eAL4B,mBAGpCzO,EAHoC,KAG7BS,EAH6B,KAgB3C,GARA6G,qBAAU,WACR,wBAAC,+BAAAoH,EAAA,sEACmBC,MAAM,wFADzB,cACOC,EADP,gBAEoBA,EAAIC,OAFxB,OAEOA,EAFP,OAICpO,GAAS,SAAAT,GAAK,oCAASA,GAAT,IAAgBmF,KAAM0J,OAJrC,0CAAD,KAMC,KACE7O,EAAMmF,KACT,MAAO,CACL,yBAAK3G,MAAO,CAAC6C,UAAW,SAAUsD,UAAW,KAC3C,kBAACmK,GAAA,EAAD,OAEF,yBAAKtQ,MAAO,CAAC6C,UAAW,SAAUsD,UAAW,KAC3C,kBAACmK,GAAA,EAAD,QAIN,IAAMC,EAAeC,OAAO1D,SAAStL,EAAMmF,KAAK8J,4BAA4BC,QACtET,EAAc,IAAInF,KAAKA,KAAK9B,MAAMxH,EAAMyO,cACxCU,EAAe,IAAI7F,KAAKmF,EAAYW,QAAQX,EAAYY,UAAYN,IAE1E,MAAO,CACL,kBAACO,EAAA,EAAD,CAAMlB,WAAS,GACb,kBAACkB,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,GACb,kBAACC,GAAA,EAAD,CAAc5N,SAAS,WAEzB,kBAAC0N,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,IACb,kBAACxM,EAAA,EAAD,CAAYC,QAAQ,MAApB,2DAKF,kBAACsM,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,GACb,kBAACE,GAAA,EAAD,CAAW7N,SAAS,WAGtB,kBAAC0N,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,IACb,kBAACxM,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,UAAWkE,EAAQ0L,UACzCnO,EAAMmF,KAAK8J,4BAA4BC,SAI5C,kBAACI,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,IACb,kBAACxM,EAAA,EAAD,CAAYC,QAAQ,SAApB,mBACmBhD,EAAMmF,KAAK8J,4BAA4BS,eAK9D,kBAACJ,EAAA,EAAD,CAAMlB,WAAS,GACb,kBAACkB,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,GACb,kBAACI,GAAA,EAAD,CAAU/N,SAAS,QAAQnD,MAAM,aAEnC,kBAAC6Q,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,IACb,kBAACxM,EAAA,EAAD,CAAYC,QAAQ,MAApB,cAGA,kBAACmF,EAAA,EAAD,CACEyH,KAAK,OACLtH,MAAOtI,EAAMyO,YACbjG,SAAU,SAAAf,GAAM,IACPa,EAASb,EAAE7E,OAAX0F,MACP7H,GAAS,SAAAT,GAAK,oCAASA,GAAT,IAAgByO,YAAanG,WAGjD,kBAACgH,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,GAAI/Q,MAAO,CAACkD,WAAY,MAGvC,kBAAC4N,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,GACb,kBAACM,GAAA,EAAD,CAAOjO,SAAS,WAGlB,kBAAC0N,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,IACb,kBAACxM,EAAA,EAAD,CAAYC,QAAQ,MAApB,yBAGA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,UAAWkE,EAAQ0L,UACzCgB,EAAaW,yBCpE0BC,GAHd,mBAG3BC,EAH2B,KAGPC,EAHO,KAI5BC,EFnBO,WACb,IAAMzN,EAAUvB,KACViP,EAAkB,IAAI7G,KAAK,aAC3B8G,GAAS9G,KAAKC,MAAQ4G,EAAgBE,WAA9B,QAEd,OACE,kBAACf,EAAA,EAAD,CAAMlB,WAAS,GACb,kBAACkB,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,GACb,kBAACe,GAAA,EAAD,CAAc1O,SAAS,QAAQnD,MAAM,aAEvC,kBAAC6Q,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,IACb,kBAACxM,EAAA,EAAD,CAAYC,QAAQ,MAApB,gCACgCmN,EAAgBL,uBAGlD,kBAACR,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,IAEf,kBAACD,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,GAAI/Q,MAAO,CAACkD,WAAY,KACrC,kBAACqB,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,UAAWkE,EAAQ0L,UACzCiC,EAAMG,QAAQ,GADjB,YECiBC,GAEvB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,GAAA,EAAD,MACA,kBAAC/I,EAAA,EAAD,CAAWpJ,UAAWkE,EAAQ2L,WAC5B,kBAACkB,EAAA,EAAD,CAAMlB,WAAS,EAACuC,QAAS,GACvB,kBAACrB,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,GAAIqB,GAAI,EAAGC,GAAI,GAC5B,kBAACjJ,EAAA,EAAD,CAAOkJ,UAAW,EAAGvS,UAAWkE,EAAQ4L,MACrC2B,IAIL,kBAACV,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,GAAIqB,GAAI,EAAGC,GAAI,GAC5B,kBAACjJ,EAAA,EAAD,CAAOkJ,UAAW,EAAGvS,UAAWkE,EAAQ4L,MACrC4B,IAIL,kBAACX,EAAA,EAAD,CAAMtN,MAAI,EAACuN,GAAI,GAAIqB,GAAI,EAAGC,GAAI,GAC5B,kBAACjJ,EAAA,EAAD,CAAOkJ,UAAW,EAAGvS,UAAWkE,EAAQ4L,MACrC6B,OCtCf,IAAM5R,GAAQyS,YAAe,CACzBC,QAAS,CACLC,QAAS,CAACC,KAAM,WAChBC,UAAW,CAACD,KAAM,cAIpBhQ,GAAYC,YAAW,CACzBpC,KAAM,CACF2C,WAAY,GACZC,WAAY,OACZJ,WAAY,UAEhB6P,KAAM,CACFxP,SAAU,GACVnD,MAAO,QAEX0E,YAAa,CACTxB,WAAY,OACZJ,WAAY,YAIpB,SAAS8P,KACL,IAAM5O,EAAUvB,KAChB,OAAO,yBAAK3C,UAAU,MAAMC,MAAO,CAACqJ,OAAQ,SACxC,kBAAC,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC9E,EAAA,EAAD,CAAYxE,UAAWkE,EAAQ1D,KAAMiE,QAAQ,KAAKC,cAAY,GAA9D,aAGA,kBAACF,EAAA,EAAD,CAAYxE,UAAWkE,EAAQU,YAAaH,QAAQ,YAAYC,cAAY,GAA5E,oDAGA,kBAACqM,EAAA,EAAD,CAAMlB,WAAS,EAACkD,QAAQ,UACpB,kBAAChC,EAAA,EAAD,CAAMtN,MAAI,GACN,kBAACwC,EAAA,EAAD,CAAY7B,KAAK,+BAA+BC,OAAO,UACnD,kBAAC2O,EAAA,EAAD,CAAQhT,UAAWkE,EAAQ2O,SAGnC,kBAAC9B,EAAA,EAAD,CAAMtN,MAAI,GACN,kBAACwC,EAAA,EAAD,CAAY7B,KAAK,yCAAyCC,OAAO,UAC7D,kBAAC4O,EAAA,EAAD,CAAUjT,UAAWkE,EAAQ2O,SAGrC,kBAAC9B,EAAA,EAAD,CAAMtN,MAAI,GACN,kBAACwC,EAAA,EAAD,CAAY7B,KAAK,4BAA4BC,OAAO,UAChD,kBAAC6O,EAAA,EAAD,CAAOlT,UAAWkE,EAAQ2O,SAGlC,kBAAC9B,EAAA,EAAD,CAAMtN,MAAI,GACN,kBAAC,IAAD,CAAYsB,GAAI,cACZ,kBAACkB,EAAA,EAAD,KACI,kBAACgK,EAAA,EAAD,CAAejQ,UAAWkE,EAAQ2O,WAKlD,kBAAC,EAAD,QA4BGxI,OAvBf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC8I,EAAA,EAAD,CAAepT,MAAOA,IAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOqT,KAAK,cACR,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,6BACR,kBAACvL,GAAD,OAEJ,kBAAC,IAAD,CAAOuL,KAAK,0BACR,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAACN,GAAD,WC/EJO,QACW,cAA7BhG,OAAOiG,SAASC,UAEe,UAA7BlG,OAAOiG,SAASC,UAEhBlG,OAAOiG,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBpF,WACrBA,UAAUqF,cAAcC,MAAMxI,MAAK,SAAAyI,GACjCA,EAAaC,kB","file":"static/js/main.da6df47b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.scss';\r\n\r\nconst ParallaxBackground = (props, context) => {\r\n  const { theme: { colorPrimary } } = context;\r\n\r\n  return (\r\n    <div className=\"parallax\" style={{ color: colorPrimary }}>\r\n      <div id=\"stars1\" />\r\n      <div id=\"stars2\" />\r\n      <div id=\"stars3\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nParallaxBackground.contextTypes = {\r\n  theme: PropTypes.any\r\n};\r\n\r\nexport default ParallaxBackground;\r\n","const themes = [\r\n  {\r\n    name: 'blue',\r\n    firstTime: true,\r\n    colorPrimary: '#4ea9da',\r\n    colorAlternate: '#FAFAFA',\r\n    colorHighlight: '#daedf7',\r\n    textPrimary: '#202121',\r\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\r\n  },\r\n  {\r\n    name: 'cyan',\r\n    firstTime: true,\r\n    colorPrimary: '#3dc0b0',\r\n    colorAlternate: '#FAFAFA',\r\n    colorHighlight: '#d7f2ef',\r\n    textPrimary: '#202121',\r\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\r\n  },\r\n  {\r\n    name: 'blue-alt',\r\n    colorPrimary: '#FAFAFA',\r\n    colorAlternate: '#4ea9da',\r\n    colorHighlight: '#2a93cb',\r\n    textPrimary: '#FAFAFA',\r\n    navAlpha: 'rgba(78, 169, 218, 0.75)'\r\n  },\r\n  {\r\n    name: 'cyan-alt',\r\n    colorPrimary: '#FAFAFA',\r\n    colorAlternate: '#3dc0b0',\r\n    colorHighlight: '#35a698',\r\n    textPrimary: '#FAFAFA',\r\n    navAlpha: 'rgba(61, 192, 176, 0.75)'\r\n  },\r\n  {\r\n    name: 'green',\r\n    colorPrimary: '#5BA150',\r\n    colorAlternate: '#FAFAFA',\r\n    colorHighlight: '#e1efdf',\r\n    textPrimary: '#202121',\r\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\r\n  },\r\n  {\r\n    name: 'brown',\r\n    colorPrimary: '#A26836',\r\n    colorAlternate: '#FAFAFA',\r\n    colorHighlight: '#f5ebe2',\r\n    textPrimary: '#202121',\r\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\r\n  },\r\n  {\r\n    name: 'orange',\r\n    colorPrimary: '#e17421',\r\n    colorAlternate: '#FAFAFA',\r\n    colorHighlight: '#f9e4d5',\r\n    textPrimary: '#202121',\r\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\r\n  },\r\n  {\r\n    name: 'crimson-red',\r\n    colorPrimary: '#e64f52',\r\n    colorAlternate: '#FAFAFA',\r\n    colorHighlight: '#fbe4e4',\r\n    textPrimary: '#202121',\r\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\r\n  },\r\n  {\r\n    name: 'red',\r\n    colorPrimary: '#af3d4e',\r\n    colorAlternate: '#FAFAFA',\r\n    colorHighlight: '#f6e4e7',\r\n    textPrimary: '#202121',\r\n    navAlpha: 'rgba(250, 250, 250, 0.75)'\r\n  },\r\n  {\r\n    name: 'red-alt',\r\n    colorPrimary: '#FFFFFF',\r\n    colorAlternate: '#89303d',\r\n    colorHighlight: '#63232c',\r\n    textPrimary: '#FFFFFF',\r\n    navAlpha: 'rgba(137, 48, 61, 0.75)'\r\n  },\r\n  {\r\n    name: 'indigo-alt',\r\n    colorPrimary: '#FAFAFA',\r\n    colorAlternate: '#303F9F',\r\n    colorHighlight: '#242f78',\r\n    textPrimary: '#FAFAFA',\r\n    navAlpha: 'rgba(48, 63, 159, 0.75)'\r\n  },\r\n  {\r\n    name: 'grey-alt',\r\n    colorPrimary: '#FFFFFF',\r\n    colorAlternate: '#485564',\r\n    colorHighlight: '#333c46',\r\n    textPrimary: '#FFFFFF',\r\n    navAlpha: 'rgba(72, 85, 100, 0.75)'\r\n  },\r\n  {\r\n    name: 'material-cyan',\r\n    colorPrimary: '#00BCD4',\r\n    colorAlternate: '#FFFFFF',\r\n    colorHighlight: '#d4faff',\r\n    textPrimary: '#212121',\r\n    navAlpha: 'rgba(255, 255, 255, 0.75)'\r\n  },\r\n  {\r\n    name: 'material-brown',\r\n    colorPrimary: '#845c4e',\r\n    colorAlternate: '#FFFFFF',\r\n    colorHighlight: '#eee6e3',\r\n    textPrimary: '#212121',\r\n    navAlpha: 'rgba(255, 255, 255, 0.75)'\r\n  },\r\n  {\r\n    name: 'material-grey',\r\n    firstTime: true,\r\n    colorPrimary: '#607D8B',\r\n    colorAlternate: '#FFFFFF',\r\n    colorHighlight: '#dfe6e9',\r\n    textPrimary: '#212121',\r\n    navAlpha: 'rgba(255, 255, 255, 0.75)'\r\n  },\r\n  {\r\n    name: 'material-grey-alt',\r\n    colorPrimary: '#FFFFFF',\r\n    colorAlternate: '#455A64',\r\n    colorHighlight: '#374850',\r\n    textPrimary: '#FAFAFA',\r\n    navAlpha: 'rgba(69, 90, 100, 0.75)'\r\n  }\r\n];\r\n\r\nexport const getThemes = () => {\r\n  return themes.map((theme) => {\r\n    return {\r\n      name: theme.name,\r\n      firstTime: theme.firstTime,\r\n      colorPrimary: theme.colorPrimary,\r\n      colorAlternate: theme.colorAlternate,\r\n      colorHighlight: theme.colorHighlight,\r\n      bgPrimary: theme.colorAlternate,\r\n      bgAlternate: theme.colorPrimary,\r\n      bgLanding: theme.colorPrimary,\r\n      textPrimary: theme.textPrimary,\r\n      textAlternate: theme.colorAlternate,\r\n      textLanding: theme.colorPrimary,\r\n      parallaxStars: theme.colorPrimary,\r\n      navAlpha: theme.navAlpha\r\n    };\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getThemes } from './themes';\r\n\r\nclass ThemeSwitcher extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const allThemes = getThemes();\r\n    const firstTimeThemes = allThemes.filter(theme => theme.firstTime === true);\r\n\r\n    this.state = {\r\n      theme: firstTimeThemes[Math.floor((Math.random() * (firstTimeThemes.length)))]\r\n    }\r\n\r\n    this.switchTheme = this.switchTheme.bind(this);\r\n  }\r\n  \r\n  getChildContext() {\r\n    return {\r\n      theme: this.state.theme,\r\n      switchTheme: this.switchTheme\r\n    };\r\n  }\r\n\r\n  getRandomTheme = () => {\r\n    const currentTheme = this.state.theme;\r\n    const allThemes = getThemes();\r\n    const themesWithoutCurrentTheme = allThemes.filter(\r\n      theme => theme.name !== currentTheme.name\r\n    );\r\n    const randomThemeIndex = Math.floor(\r\n      (Math.random() * (themesWithoutCurrentTheme.length))\r\n    );\r\n    return themesWithoutCurrentTheme[randomThemeIndex];\r\n  }\r\n\r\n  switchTheme = () => {\r\n    const randomTheme = this.getRandomTheme();\r\n    this.setState({\r\n      theme: randomTheme\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const theme = this.state.theme;\r\n\r\n    return (\r\n      <div className=\"theme-switcher\">\r\n        <style jsx=\"true\">\r\n        {`\r\n          body {\r\n            background-color: ${theme.bgPrimary};\r\n            body, h1, h2, h3, h4, h5, h6, p, ol, ul {\r\n              color: ${theme.textPrimary}\r\n            }\r\n          }\r\n        `}\r\n        </style>\r\n        { children }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nThemeSwitcher.propTypes = {\r\n  children: PropTypes.node\r\n}\r\n\r\nThemeSwitcher.childContextTypes = {\r\n  theme: PropTypes.any,\r\n  switchTheme: PropTypes.func\r\n}\r\n\r\nexport default ThemeSwitcher;","import {Typography, Link} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport React from \"react\";\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport {OpenInNew, Star} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n    itemRoot: {\r\n        textAlign: 'left',\r\n        paddingBottom: 20,\r\n        fontFamily: 'Ubuntu',\r\n        lineHeight: 1.5,\r\n    },\r\n    title: {\r\n        paddingTop: 30,\r\n        paddingBottom: 10,\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Ubuntu',\r\n        textAlign: 'initial',\r\n        fontSize: 26,\r\n    },\r\n    demo: {\r\n        fontSize: 17,\r\n        fontWeight: 400,\r\n        textAlign: 'initial',\r\n        color: '#3b6ae9',\r\n        \"&:hover\": {\r\n            color: '#2196f3'\r\n        },\r\n    },\r\n    noDemo: {\r\n        fontSize: 17,\r\n        fontWeight: 400,\r\n        textAlign: 'initial',\r\n        color: '#3b6ae9',\r\n        textDecoration: 'line-through'\r\n    },\r\n    item: {\r\n        fontSize: 17,\r\n        fontWeight: 400,\r\n        textAlign: 'initial',\r\n        color: '#000',\r\n        \"&:hover\": {\r\n            color: '#2196f3'\r\n        },\r\n    },\r\n    itemDescription: {\r\n        fontSize: 17,\r\n        fontWeight: 400,\r\n        textAlign: 'initial',\r\n        color: '#7a7a7a',\r\n    },\r\n    hr: {\r\n        borderTop: '1px solid #ddd',\r\n    },\r\n    itemInterest: {\r\n        fontSize: 17,\r\n        fontWeight: 400,\r\n        textAlign: 'initial',\r\n        color: '#000',\r\n    },\r\n    itemCompany: {\r\n        fontSize: 17,\r\n        fontWeight: 400,\r\n        textAlign: 'initial',\r\n        color: '#7a7a7a',\r\n        \"&:hover\": {\r\n            color: '#2196f3'\r\n        },\r\n    },\r\n    resume: {\r\n        paddingTop: 16,\r\n        display: 'block',\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Ubuntu',\r\n        textAlign: 'initial',\r\n        fontSize: 26,\r\n        color: '#000',\r\n        \"&:hover\": {\r\n          color: '#2196f3'\r\n        },\r\n    }\r\n});\r\n\r\nexport function Resume() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Link className={classes.resume} href={'/resume.pdf'} target=\"_blank\">\r\n            Resume\r\n            <OpenInNew fontSize=\"inherit\"/>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport function Title(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Typography className={classes.title} variant=\"h5\" gutterBottom>\r\n            {props.name}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport function Item(props) {\r\n    const {name, description, link, demo, playStore, noDemo} = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.itemRoot}>\r\n            <Link className={classes.item} href={link} target=\"_blank\">\r\n                {name}\r\n                <OpenInNew fontSize=\"inherit\"/>\r\n            </Link>\r\n            {demo ?\r\n                <span>\r\n                    {' · '}\r\n                    <RouterLink className={classes.demo} to={demo}>\r\n                        demo\r\n                        <Star fontSize=\"inherit\"/>\r\n                    </RouterLink>\r\n                </span>\r\n                : null\r\n            }\r\n\r\n            {noDemo ?\r\n                <span>\r\n                        {' · '}\r\n                    <span className={classes.noDemo}>\r\n                        demo\r\n                        <Star fontSize=\"inherit\"/>\r\n                    </span>\r\n                </span>\r\n                : null\r\n            }\r\n            {playStore ?\r\n                <span>\r\n                    {' · '}\r\n                    <Link className={classes.demo} href={playStore} target=\"_blank\">\r\n                        Play Store\r\n                        <OpenInNew fontSize=\"inherit\"/>\r\n                    </Link>\r\n                </span>\r\n                : null\r\n            }\r\n\r\n            {' · '}\r\n            <span className={classes.itemDescription}>\r\n                {description}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Interest({name}) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.itemRoot}>\r\n            <span className={classes.itemInterest}>\r\n                {name}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Experience({title, company, link, duration}) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.itemRoot}>\r\n            <span className={classes.itemInterest}>\r\n                {title}\r\n            </span>\r\n            {' · '}\r\n            <span className={classes.itemDescription}>\r\n                {duration}\r\n            </span>\r\n            <br/>\r\n            {link ? <Link className={classes.itemCompany} href={link} target=\"_blank\">\r\n                    {company}\r\n                </Link> :\r\n                <span className={classes.itemDescription}>\r\n                    {company}\r\n                </span>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Education() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.itemRoot}>\r\n            <div style={{paddingBottom: 15}}>\r\n                <span className={classes.itemInterest}>\r\n                     Bachelor of Science · University of Toronto · Graduating 2020 May\r\n                </span>\r\n            </div>\r\n            <div className={classes.itemInterest} style={{paddingBottom: 15, paddingLeft: 20}}>\r\n                - Computer Science Specialist · Focus on Artificial Intelligent & Computer Networks\r\n            </div>\r\n            <div className={classes.itemInterest} style={{paddingLeft: 20}}>\r\n                - Statistics Minor\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Footer() {\r\n    return <span style={{color: '#aaa', paddingBottom: 10}}>Copyright © 2019-2020 Dishu(Lester) Lyu</span>\r\n}\r\n","import React from \"react\";\r\nimport {Container, Divider} from '@material-ui/core/index';\r\nimport {Resume, Title, Interest, Item, Education, Experience, Footer} from '../components/Intro'\r\n\r\nfunction Intro() {\r\n    return (\r\n        <Container style={{maxWidth: 800}}>\r\n            <Divider/>\r\n            {/*<hr className={classes.hr}/>*/}\r\n            <Resume/>\r\n            <Title name=\"Public Open Sourced Projects\"/>\r\n            <Item name=\"Owlready2\"\r\n                  description=\"Owlready2 is a library for ontology-oriented programming in Python. It can manage ontologies and\r\n                   knowledge graphs in a graph database, i.e. GraphDB, connected through SPARQL endpoint. It can\r\n                   lso be used as an ORM (Object-relational mapper). Classes & properties & instances defined in the\r\n                   graph database can be mapped into Python Objects/Classes.\"\r\n                  link=\"https://github.com/LesterLyu/owlready2\"/>\r\n\r\n            <Item name=\"Course Oracle\"\r\n                  description=\"Course Oracle provides worldwide students a way to share course\r\n                        materials and course ratings. Course rating can be stored on the block chain optionally. User uses\r\n                        cryptocurrencies to purchase course materials, the user who shared the materials earns a portion\r\n                        from the purchase and can withdraw to their own wallet.\"\r\n                  link=\"https://github.com/LesterLyu/CourseOracle\"/>\r\n            <Item name=\"Excel Formula Parser\"\r\n                  description=\"A JavaScript library to parse and evaluate MS Excel/Google Sheets formulas with near 300\r\n                   formulas support and competitive performance.\"\r\n                  demo=\"/demo/fast-formula-parser\"\r\n                  link=\"https://www.npmjs.com/package/fast-formula-parser\"/>\r\n            <Item name=\"MOHLTC Data Project\"\r\n                  description=\"A web app designed for businesses to create data collection forms on the fly and collect\r\n                   data in a short period of time.\"\r\n                  noDemo={true}\r\n                  link=\"https://github.com/LesterLyu/MOHLTC-DataProject\"/>\r\n            <Item name=\"Xlsx Populate\"\r\n                  description=\"A JavaScript library that creates or modifies MS Excel files. It supports real-time\r\n                  formula evaluating and is able to run in the browser.\"\r\n                  link=\"https://github.com/LesterLyu/xlsx-populate\"/>\r\n            <Item name=\"Connect Four AI\"\r\n                  description=\"An  implementation of Minimax Algorithm on Connect Four with GUI.\"\r\n                  link=\"https://github.com/LesterLyu/CSC384Project\"/>\r\n            <Item name=\"UofT Timetable\"\r\n                  description=\"A timetable Android app for students in University of Toronto.\"\r\n                  playStore=\"https://play.google.com/store/apps/details?id=com.lvds2000.utsccsuntility\"\r\n                  link=\"https://github.com/LesterLyu/UofT-Timetable\"/>\r\n            <Item name=\"Acorn API\"\r\n                  description=\"An Acorn API for University of Toronto. Acorn is UofT' s student information service.\r\n                   It has no public API. I wrote this to support the UofT Timetable above.\"\r\n                  link=\"https://github.com/LesterLyu/AcornAPI\"/>\r\n            <Item name=\"Object Detection Webapp (requires camera)\"\r\n                  description=\"A react wrapper for object detection. Pre-trained Model is from Tenserflow.js \"\r\n                  demo=\"/demo/object-detection\"\r\n                  link=\"https://github.com/LesterLyu/ObjectDetectionReact\"/>\r\n\r\n            <Divider/>\r\n\r\n            <Title name=\"Interests\"/>\r\n\r\n            <Interest name={\"Web Full Stack Programming\"}/>\r\n            <Interest name={\"Computer Networks & Low Level Programming\"}/>\r\n            <Interest name={\"Machine Learning & Visual Computing\"}/>\r\n\r\n            <Divider/>\r\n\r\n            <Title name=\"Experiences\"/>\r\n            <Experience title=\"Software Engineer\"\r\n                        company=\"Department of MIE, University of Toronto\"\r\n                        link=\"https://www.mie.utoronto.ca/\"\r\n                        duration=\"May 2021 – Present\"/>\r\n            <Experience title=\"Junior Web Developer\"\r\n                        company=\"School of Cities, University of Toronto\"\r\n                        link=\"https://www.schoolofcities.utoronto.ca/\"\r\n                        duration=\"May 2020 – April 2021\"/>\r\n            <Experience title=\"Research Assistance\"\r\n                        company=\"Department of MIE, University of Toronto\"\r\n                        link=\"https://www.utoronto.ca/\"\r\n                        duration=\"January 2020 – April 2020\"/>\r\n            <Experience title=\"Software Developer Intern\"\r\n                        company=\"Ontario Government Ministry of Health and Long-Term Care\"\r\n                        link=\"http://www.health.gov.on.ca/en/\"\r\n                        duration=\"September 2018 – August 2019\"/>\r\n            <Experience title=\"Software Developer Co-op\"\r\n                        company=\"Xiamen Dnake Intelligent Technology Co., Ltd.\"\r\n                        link=\"https://www.dnake-global.com/\"\r\n                        duration=\"June 2016 – August 2016\"/>\r\n\r\n            <Divider/>\r\n\r\n            <Title name=\"Education\"/>\r\n            <Education/>\r\n            <Divider/>\r\n            <Footer/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, Typography, IconButton} from '@material-ui/core';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport {ArrowBack} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    backButton: {\r\n        color: '#fff',\r\n        textDecoration: 'initial',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        color: '#fff',\r\n        textDecoration: 'initial',\r\n    },\r\n}));\r\n\r\nexport default function MyAppBar({title}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\" className={classes.root}>\r\n            <Toolbar>\r\n                <RouterLink to=\"/\" className={classes.backButton}>\r\n                    <IconButton color={\"inherit\"}>\r\n                        <ArrowBack fontSize=\"default\"/>\r\n                    </IconButton>\r\n                </RouterLink>\r\n\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {title}\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Container, makeStyles, Paper, Typography, TextField} from '@material-ui/core';\r\nimport AppBar from '../../../components/AppBar';\r\nimport FormulaParser from 'fast-formula-parser';\r\n// import FormulaParser from 'fast-formula-parser/build/parser.min';\r\nimport {FixedSizeGrid as Grid} from 'react-window';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: 20,\r\n        marginTop: 20,\r\n    },\r\n    title: {\r\n        paddingBottom: 20,\r\n        paddingTop: 20,\r\n    },\r\n    cellDefault: {\r\n        borderRight: '1px solid #ccc',\r\n        borderBottom: '1px solid #ccc',\r\n        padding: '0 4px 0 4px',\r\n        lineHeight: 'normal',\r\n        textAlign: 'left',\r\n        whiteSpace: 'pre',\r\n        boxSizing: 'border-box'\r\n    },\r\n    input: {\r\n        paddingBottom: 10,\r\n        paddingRight: 10,\r\n    }\r\n}));\r\n\r\n\r\n/**\r\n * Convert a column name to a number.\r\n * @param {string} name - The column name.\r\n * @returns {number} The number.\r\n */\r\nfunction columnNameToNumber(name) {\r\n    if (!name || typeof name !== \"string\") return;\r\n\r\n    name = name.toUpperCase();\r\n    let sum = 0;\r\n    for (let i = 0; i < name.length; i++) {\r\n        sum = sum * 26;\r\n        sum = sum + (name[i].charCodeAt(0) - 'A'.charCodeAt(0) + 1);\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\n/**\r\n * Convert a column number to a name.\r\n * @param {number} number - The column number.\r\n * @returns {string} The name.\r\n */\r\nfunction columnNumberToName(number) {\r\n    let dividend = number;\r\n    let name = '';\r\n    let modulo = 0;\r\n\r\n    while (dividend > 0) {\r\n        modulo = (dividend - 1) % 26;\r\n        name = String.fromCharCode('A'.charCodeAt(0) + modulo) + name;\r\n        dividend = Math.floor((dividend - modulo) / 26);\r\n    }\r\n\r\n    return name;\r\n}\r\n\r\nconst emptyData = () => {\r\n    const data = [];\r\n    let cnt = 0;\r\n    for (let i = 0; i < 50; i++) {\r\n        const row = [];\r\n        for (let j = 0; j < 50; j++) {\r\n            row.push(cnt++);\r\n        }\r\n        data.push(row);\r\n    }\r\n    data[0][0] = 'hello';\r\n    data[0][1] = 'world';\r\n    data[0][2] = true;\r\n    return data;\r\n};\r\n\r\nconst data = emptyData();\r\n\r\nconst Cell = ({columnIndex, rowIndex, style}) => {\r\n    const classes = useStyles();\r\n    if (columnIndex === 0) {\r\n        return <div style={style} className={classes.cellDefault}>\r\n            {rowIndex === 0 ? null : rowIndex}\r\n        </div>\r\n    } else if (rowIndex === 0) {\r\n        return <div style={style} className={classes.cellDefault}>\r\n            {columnNumberToName(columnIndex)}\r\n        </div>\r\n    }\r\n    return (\r\n        <div style={style} className={classes.cellDefault}>\r\n            {data[rowIndex - 1][columnIndex - 1] === true ? 'TRUE' : data[rowIndex - 1][columnIndex - 1]}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function FastFormulaParser() {\r\n    const classes = useStyles();\r\n    const [formula, setFormula] = useState('CONCAT(SUM(A2:C4), VARIABLE1)');\r\n    const [result, setResult] = useState('');\r\n\r\n    const parser = new FormulaParser({\r\n        // Variable used in formulas (defined name)\r\n        onVariable: (name, sheetName) => {\r\n            if (name === 'VARIABLE1')\r\n                return {\r\n                    sheet: 'Sheet 1',\r\n                    row: 1,\r\n                    col: 1\r\n                };\r\n            else if (name === 'VARIABLE2')\r\n                return {\r\n                    sheet: 'Sheet 1',\r\n                    from: {\r\n                        row: 2,\r\n                        col: 1,\r\n                    },\r\n                    to: {\r\n                        row: 3,\r\n                        col: 3,\r\n                    }\r\n                };\r\n        },\r\n        // retrieve cell value\r\n        onCell: ({sheet, row, col}) => {\r\n            // using 1-based index\r\n            // return the cell value, see possible types in next section.\r\n            return data[row - 1][col - 1];\r\n        },\r\n\r\n        // retrieve range values\r\n        onRange: (ref) => {\r\n            // using 1-based index\r\n            // Be careful when ref.to.col is MAX_COLUMN or ref.to.row is MAX_ROW, this will result in\r\n            // unnecessary loops in this approach.\r\n            const arr = [];\r\n            for (let row = ref.from.row; row <= ref.to.row; row++) {\r\n                const innerArr = [];\r\n                if (data[row - 1]) {\r\n                    for (let col = ref.from.col; col <= ref.to.col; col++) {\r\n                        innerArr.push(data[row - 1][col - 1]);\r\n                    }\r\n                }\r\n                arr.push(innerArr);\r\n            }\r\n            return arr;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const FormulaResult = parser.parse(formula, {sheet: 'Sheet 1', row: 50, col: 50});\r\n            setResult(FormulaResult);\r\n        } catch (e) {\r\n            setResult(e.toString());\r\n        }\r\n    }, [formula, setResult, parser]);\r\n\r\n    const onFormulaChange = e => {\r\n        const formula = e.target.value;\r\n        setFormula(formula);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AppBar title=\"Fast Formula Parser\"/>\r\n            <Container maxWidth=\"lg\">\r\n                <Paper className={classes.root}>\r\n                    <Typography variant=\"h5\" style={{paddingTop: 0}} className={classes.title}>\r\n                        Data (Sheet 1)\r\n                    </Typography>\r\n                    <Grid\r\n                        className=\"Grid\"\r\n                        height={300}\r\n                        width={400}\r\n                        columnCount={51}\r\n                        columnWidth={100}\r\n                        rowCount={51}\r\n                        rowHeight={35}\r\n                    >\r\n                        {Cell}\r\n                    </Grid>\r\n\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Variables\r\n                    </Typography>\r\n                    <TextField disabled label=\"VARIABLE1\" value=\"'Sheet 1'!$A$1\" className={classes.input}/>\r\n                    <TextField disabled label=\"VARIABLE2\" value=\"'Sheet 1'!$A$2:$C$3\" className={classes.input}/>\r\n\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Formula Located In\r\n                    </Typography>\r\n                    <TextField disabled label=\"Row\" value=\"50\" className={classes.input}/>\r\n                    <TextField disabled label=\"Column\" value=\"AX\" className={classes.input}/>\r\n                    <TextField disabled label=\"Sheet\" value=\"Sheet 1\" className={classes.input}/>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Formula Input\r\n                    </Typography>\r\n                    <TextField fullWidth label=\"Formula\" value={formula} onChange={onFormulaChange}\r\n                               className={classes.input}/>\r\n                    <TextField multiline label=\"Result\" fullWidth value={result} style={{whiteSpace: 'pre'}}\r\n                               className={classes.input}/>\r\n\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Supported Formulas\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                        {parser.supportedFunctions().join(', ')}\r\n                    </Typography>\r\n                </Paper>\r\n\r\n            </Container>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\r\nimport \"./styles.css\";\r\nimport {Button, Fab} from \"@material-ui/core\";\r\nimport {ArrowBack} from \"@material-ui/icons\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n    videoRef = React.createRef();\r\n    canvasRef = React.createRef();\r\n    state = {\r\n        info: '\\tloading model, please wait. This may take 10 seconds...\\n For ios devices, please use Safari.',\r\n        fps: 0\r\n    };\r\n    stop = false;\r\n    front = true;\r\n    time = Date.now();\r\n    frames = 0;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // calculate appropriate camera size\r\n        if (window.innerHeight > window.innerWidth) {\r\n            // landscape mode\r\n            this.idealHeight = 960;\r\n            this.idealWidth = 1280;\r\n            this.canvasWidth = window.innerWidth;\r\n            this.canvasHeight = window.innerWidth / 3 * 4;\r\n        } else {\r\n            this.idealHeight = 720;\r\n            this.idealWidth = 1280;\r\n            this.canvasWidth = window.innerHeight / 9 * 16;\r\n            this.canvasHeight = window.innerHeight;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.start()\r\n            .then(() => {\r\n                return cocoSsd.load();\r\n            })\r\n            .then(model => {\r\n                this.model = model;\r\n                this.stop = false;\r\n                this.setState({info: ''});\r\n                this.detectFrame(this.videoRef.current);\r\n            })\r\n            .catch(error => {\r\n                this.setState({info: error.message});\r\n                console.log(error);\r\n            });\r\n        const ctx = this.canvasRef.current.getContext(\"2d\");\r\n        ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\r\n    }\r\n\r\n    start() {\r\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n            return navigator.mediaDevices\r\n                .getUserMedia({\r\n                    audio: false,\r\n                    video: {\r\n                        facingMode: this.front ? \"user\" : \"environment\",\r\n                        width: {ideal: this.idealWidth},\r\n                        height: {ideal: this.idealHeight},\r\n                    }\r\n                })\r\n                .then(stream => {\r\n                    console.log(stream);\r\n                    this.setState({info: 'Loading Model, this may take 10 seconds...'});\r\n                    window.stream = stream;\r\n                    this.videoRef.current.srcObject = stream;\r\n                    return new Promise((resolve, reject) => {\r\n                        this.videoRef.current.onloadedmetadata = () => {\r\n                            resolve();\r\n                        };\r\n                    });\r\n                })\r\n        } else {\r\n            return Promise.reject(\"Browser not supported.\");\r\n        }\r\n    }\r\n\r\n    detectFrame = (video) => {\r\n        if (this.stop)\r\n            return;\r\n        if (Date.now() - this.time >= 1000) {\r\n            this.setState({fps: this.frames});\r\n            this.frames = 0;\r\n            this.time = Date.now();\r\n        }\r\n        this.frames++;\r\n        this.model.detect(video).then(predictions => {\r\n            this.renderPredictions(predictions);\r\n            requestAnimationFrame(() => {\r\n                this.detectFrame(video);\r\n            });\r\n        });\r\n    };\r\n\r\n    renderPredictions = predictions => {\r\n        const ctx = this.canvasRef.current.getContext(\"2d\");\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        // Font options.\r\n        const font = \"16px sans-serif\";\r\n\r\n        ctx.font = font;\r\n        ctx.textBaseline = \"top\";\r\n        ctx.globalAlpha = 0.7;\r\n        predictions.forEach(prediction => {\r\n            const x = prediction.bbox[0];\r\n            const y = prediction.bbox[1];\r\n            const width = prediction.bbox[2];\r\n            const height = prediction.bbox[3];\r\n            // Draw the bounding box.\r\n            ctx.strokeStyle = \"#00FFFF\";\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(x, y, width, height);\r\n            // Draw the label background.\r\n            ctx.fillStyle = \"#00FFFF\";\r\n            const textWidth = ctx.measureText(prediction.class + ' 99%').width;\r\n            const textHeight = parseInt(font, 10); // base 10\r\n            ctx.fillRect(x + 1, y + 1, textWidth + 2, textHeight + 2);\r\n        });\r\n\r\n        predictions.forEach(prediction => {\r\n            const x = prediction.bbox[0];\r\n            const y = prediction.bbox[1];\r\n            // Draw the text last to ensure it's on top.\r\n            ctx.fillStyle = \"#000000\";\r\n            ctx.fillText(prediction.class + ' ' + (prediction.score * 100).toPrecision(2) + '%', x + 1, y + 1);\r\n        });\r\n    };\r\n\r\n    switchCamera = () => {\r\n        this.stop = true;\r\n        if (window.stream) {\r\n            window.stream.getTracks().forEach(t => {\r\n                t.stop();\r\n            })\r\n        }\r\n        this.front = !this.front;\r\n        console.log(this.front);\r\n        this.start().then(() => {\r\n            this.stop = false;\r\n            this.setState({info: ''});\r\n            this.detectFrame(this.videoRef.current);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <video\r\n                    className=\"size\"\r\n                    autoPlay\r\n                    playsInline\r\n                    muted\r\n                    ref={this.videoRef}\r\n                    width={this.canvasWidth}\r\n                    height={this.canvasHeight}\r\n                />\r\n                <canvas\r\n                    className=\"size\"\r\n                    ref={this.canvasRef}\r\n                    width={window.devicePixelRatio * this.canvasWidth}\r\n                    height={window.devicePixelRatio * this.canvasHeight}\r\n                    style={{\r\n                        width: this.canvasWidth,\r\n                        height: this.canvasHeight\r\n                    }}\r\n                />\r\n                {this.state.fps !== 0 ?\r\n                    <h4 style={{position: 'absolute', top: 0, left: 0, color: '#aaa'}}>{this.state.fps}</h4>\r\n                    : ''}\r\n                <h4 style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    display: this.state.info.length ? 'show' : 'none',\r\n                }}>{this.state.info}</h4>\r\n\r\n                <RouterLink to=\"/\" style={{\r\n                    position: 'absolute',\r\n                    top: window.innerHeight - 65,\r\n                    left: 20,\r\n                    height: 40,\r\n                    width: 60\r\n                }} onClick={() => {\r\n\t\t\t\t\tthis.stop = true;\r\n\t\t\t\t\tif (window.stream) {\r\n\t\t\t\t\t\twindow.stream.getTracks().forEach(t => {\r\n\t\t\t\t\t\t\tt.stop();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}}>\r\n                    <Fab color={\"inherit\"} style={{\r\n                        color: '#fff',\r\n                        backgroundColor: '#2196f3'\r\n                    }}>\r\n                        <ArrowBack fontSize=\"default\"/>\r\n                    </Fab>\r\n                </RouterLink>\r\n\r\n                <Button variant=\"contained\"\r\n                        style={{position: 'absolute', top: window.innerHeight - 57, height: 40, left: 100}}\r\n                        color=\"primary\" onClick={this.switchCamera}>Switch Camera\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { PhoneAndroid } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  boldText: {\r\n    fontSize: 28,\r\n    fontWeight: 700,\r\n  },\r\n});\r\n\r\nexport default function usePhoneYears() {\r\n  const classes = useStyles();\r\n  const phoneBoughtTime = new Date('4/27/2017');\r\n  const years = (Date.now() - phoneBoughtTime.getTime()) / (1000 * 60 * 60 * 24 * 365)\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={2}>\r\n        <PhoneAndroid fontSize=\"large\" color=\"primary\"/>\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        <Typography variant=\"h5\">\r\n          Samsung Galaxy S8+ bought on {phoneBoughtTime.toLocaleDateString()}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n      </Grid>\r\n      <Grid item xs={10} style={{paddingTop: 12}}>\r\n        <Typography variant=\"h5\" className={classes.boldText}>\r\n          {years.toFixed(2)} Years\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import { Grid, makeStyles, CircularProgress, TextField, Typography } from \"@material-ui/core\";\r\nimport { Check, InfoOutlined, Timelapse, Timeline } from \"@material-ui/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  boldText: {\r\n    fontSize: 28,\r\n    fontWeight: 700,\r\n  },\r\n});\r\n\r\nexport default function useWorkPermitCards() {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    data: null,\r\n    appliedDate: '2020-05-13'\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const res = await fetch('https://www.canada.ca/content/dam/ircc/documents/json/data-ptime-non-country-en.json');\r\n      const json = await res.json();\r\n      // console.log(json);\r\n      setState(state => ({...state, data: json}));\r\n    })();\r\n  }, []);\r\n  if (!state.data)\r\n    return [\r\n      <div style={{textAlign: 'center', marginTop: 22}}>\r\n        <CircularProgress/>\r\n      </div>,\r\n      <div style={{textAlign: 'center', marginTop: 22}}>\r\n        <CircularProgress/>\r\n      </div>\r\n    ]\r\n\r\n  const requiredDays = Number.parseInt(state.data.work_extension_new_employer.online);\r\n  const appliedDate = new Date(Date.parse(state.appliedDate));\r\n  const EstimateDate = new Date(appliedDate.setDate(appliedDate.getDate() + requiredDays));\r\n\r\n  return [(\r\n    <Grid container>\r\n      <Grid item xs={2}>\r\n        <InfoOutlined fontSize=\"large\"/>\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        <Typography variant=\"h5\">\r\n          Work permit from inside Canada (initial and extension)\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={2}>\r\n        <Timelapse fontSize=\"large\"/>\r\n      </Grid>\r\n\r\n      <Grid item xs={10}>\r\n        <Typography variant=\"h5\" className={classes.boldText}>\r\n          {state.data.work_extension_new_employer.online}\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={10}>\r\n        <Typography variant=\"body1\">\r\n          Last updated on {state.data.work_extension_new_employer.lastupdated}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  ), (\r\n    <Grid container>\r\n      <Grid item xs={2}>\r\n        <Timeline fontSize=\"large\" color=\"primary\"/>\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        <Typography variant=\"h5\">\r\n          Applied on\r\n        </Typography>\r\n        <TextField\r\n          type=\"date\"\r\n          value={state.appliedDate}\r\n          onChange={e => {\r\n            const {value} = e.target;\r\n            setState(state => ({...state, appliedDate: value}));\r\n          }}/>\r\n      </Grid>\r\n      <Grid item xs={12} style={{paddingTop: 12}}>\r\n      </Grid>\r\n\r\n      <Grid item xs={2}>\r\n        <Check fontSize=\"large\"/>\r\n      </Grid>\r\n\r\n      <Grid item xs={10}>\r\n        <Typography variant=\"h5\">\r\n          Estimated Approval on\r\n        </Typography>\r\n        <Typography variant=\"h5\" className={classes.boldText}>\r\n          {EstimateDate.toLocaleDateString()}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )];\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Grid,\r\n  makeStyles,\r\n  CssBaseline\r\n} from \"@material-ui/core\";\r\nimport usePhoneYears from './PhoneYears'\r\nimport useWorkPermitCards from './WorkPermit'\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    paddingTop: 20,\r\n  },\r\n  boldText: {\r\n    fontSize: 28,\r\n    fontWeight: 700,\r\n  },\r\n  card: {\r\n    margin: 6,\r\n    padding: 18,\r\n    minHeight: 100,\r\n  }\r\n});\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n\r\n  const [workPermitTimeCard, EstimatedTimeCard] = useWorkPermitCards();\r\n  const phoneYearsCard = usePhoneYears();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline/>\r\n      <Container className={classes.container}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <Paper elevation={5} className={classes.card}>\r\n              {workPermitTimeCard}\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <Paper elevation={5} className={classes.card}>\r\n              {EstimatedTimeCard}\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <Paper elevation={5} className={classes.card}>\r\n              {phoneYearsCard}\r\n            </Paper>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport ParallaxBackground from './components/ParallaxBackground';\r\nimport ThemeSwitcher from './components/ThemeSwitcher';\r\nimport {Typography, IconButton, Grid} from '@material-ui/core';\r\nimport {makeStyles, ThemeProvider, createMuiTheme} from '@material-ui/core/styles';\r\nimport {GitHub, LinkedIn, Email, Dashboard as DashboardIcon} from '@material-ui/icons';\r\nimport {HashRouter as Router, Route, Switch, Link as RouterLink} from 'react-router-dom';\r\nimport Intro from './pages/Intro';\r\nimport FastFormulaParser from './pages/demo/formulaParser/fastFormulaParser';\r\nimport ObjectDetection from './pages/demo/objectDetection'\r\nimport Dashboard from \"./pages/dashboard\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {main: '#2196f3'},\r\n        secondary: {main: '#f50057'},\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n    name: {\r\n        paddingTop: 60,\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Ubuntu'\r\n    },\r\n    icon: {\r\n        fontSize: 30,\r\n        color: '#555'\r\n    },\r\n    description: {\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Ubuntu'\r\n    }\r\n});\r\n\r\nfunction Home() {\r\n    const classes = useStyles();\r\n    return <div className=\"App\" style={{height: '100%'}}>\r\n        <ThemeSwitcher>\r\n            <ParallaxBackground/>\r\n            <Typography className={classes.name} variant=\"h3\" gutterBottom>\r\n                Dishu Lyu\r\n            </Typography>\r\n            <Typography className={classes.description} variant=\"subtitle1\" gutterBottom>\r\n                Specialist of Computer Science, Focus on the Web\r\n            </Typography>\r\n            <Grid container justify=\"center\">\r\n                <Grid item>\r\n                    <IconButton href=\"https://github.com/LesterLyu\" target=\"_blank\">\r\n                        <GitHub className={classes.icon}/>\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                    <IconButton href=\"https://www.linkedin.com/in/lesterlyu/\" target=\"_blank\">\r\n                        <LinkedIn className={classes.icon}/>\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                    <IconButton href=\"mailto:lvds2000@gmail.com\" target=\"_blank\">\r\n                        <Email className={classes.icon}/>\r\n                    </IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                    <RouterLink to={'/dashboard'}>\r\n                        <IconButton>\r\n                            <DashboardIcon className={classes.icon}/>\r\n                        </IconButton>\r\n                    </RouterLink>\r\n                </Grid>\r\n            </Grid>\r\n            <Intro/>\r\n        </ThemeSwitcher>\r\n    </div>;\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <ThemeProvider theme={theme}>\r\n                <Switch>\r\n                    <Route path=\"/dashboard\">\r\n                        <Dashboard/>\r\n                    </Route>\r\n                    <Route path=\"/demo/fast-formula-parser\">\r\n                        <FastFormulaParser/>\r\n                    </Route>\r\n                    <Route path=\"/demo/object-detection\">\r\n                        <ObjectDetection/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Home/>\r\n                    </Route>\r\n                </Switch>\r\n            </ThemeProvider>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'typeface-ubuntu';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}